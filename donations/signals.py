from django.db.models.signals import post_save
from django.dispatch import receiver
from donations.models import Donation
from publications.models import Publication
from notifications.utils import notify_user, notify_top_donor
from django.db.models import Sum

@receiver(post_save, sender=Donation)
def check_publication_funding(sender, instance, created, **kwargs):
    if not created:
        return

    publication = instance.publication
    total = publication.total_donated()

    if total >= publication.amount and publication.status != 'successful':
        publication.status = 'successful'
        publication.is_archived = True
        publication.save()
        print(f"‚úÖ –ü—É–±–ª–∏–∫–∞—Ü–∏—è '{publication.title}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –∞—Ä—Ö–∏–≤.")


@receiver(post_save, sender=Donation)
def notify_new_donation(sender, instance, created, **kwargs):
    if not created:
        return

    publication = instance.publication
    author = publication.author
    donor = instance.donor

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É
    if donor and author != donor:
        notify_user(
            user=author,
            verb="üí∞ –ö—Ç–æ-—Ç–æ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª –Ω–∞ –≤–∞—à—É –ø—É–±–ª–∏–∫–∞—Ü–∏—é",
            target=f"{donor.first_name} –æ—Ç–ø—Ä–∞–≤–∏–ª {instance.donor_amount} ‚Ç∏",
            url=f"/post/{publication.id}"
        )

    # ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–Ω–æ—Ä—É, –µ—Å–ª–∏ –æ–Ω –≤—Ö–æ–¥–∏—Ç –≤ —Ç–æ–ø-3
    if donor:
        top_donors = (
            publication.donations
            .values('donor')
            .annotate(total=Sum('donor_amount'))
            .order_by('-total')[:3]
        )
        if any(d['donor'] == donor.id for d in top_donors):
            notify_top_donor(donor, publication)

@receiver(post_save, sender=Donation)
def notify_half_goal_reached(sender, instance, created, **kwargs):
    if not created:
        return

    publication = instance.publication
    author = publication.author
    total_donated = publication.total_donated()
    goal = publication.amount

    if goal > 0 and 45 <= (total_donated / goal) * 100 < 55:
        notify_user(
            user=author,
            verb="üéØ –í–∞—à–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –¥–æ—Å—Ç–∏–≥–ª–∞ 50% —Ü–µ–ª–∏!",
            target=publication.title,
            url=f"/post/{publication.id}"
        )

@receiver(post_save, sender=Donation)
def notify_goal_reached(sender, instance, created, **kwargs):
    if not created:
        return

    publication = instance.publication
    author = publication.author
    total_donated = publication.total_donated()

    if total_donated >= publication.amount and publication.status != 'successful':
        notify_user(
            user=author,
            verb="üéâ –¶–µ–ª—å —Å–±–æ—Ä–∞ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!",
            target=publication.title,
            url=f"/post/{publication.id}"
        )